server.port=8020

logging.level.org.springframework.data=DEBUG
logging.level.io.seyon=DEBUG

# Datasource
#spring.datasource.url=jdbc:h2:tcp://localhost:9092/~/seyon;AUTO_SERVER=TRUE
#spring.datasource.username=sa
#spring.datasource.password=
#spring.datasource.driver-class-name=org.h2.Driver

spring.h2.console.enabled=true
spring.h2.console.path=/h2
spring.h2.console.settings.web-allow-others=true

# Datasource
spring.datasource.url=jdbc:h2:file:~/seyon
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.data=
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

seyon.api.auth-exclude-url=/api/company/createCompany,/api/user/resetpassword,/api/user/findUserByEmail,/api/userrole/getRolesOpen
seyon.api.error-code-mapping.java.lang.IllegalArgumentException= 401
seyon.api.error-message-mapping.java.lang.IllegalArgumentException= Invalid Input
seyon.api.error-code-mapping.io.seyon.company.config.CompanyAlreadyExistException= 409
seyon.api.error-message-mapping.io.seyon.company.config.CompanyAlreadyExistException= Company Already Exist
seyon.api.error-code-mapping.io.seyon.client.config.GstnAlreadyExistException= 410
seyon.api.error-message-mapping.io.seyon.client.config.GstnAlreadyExistException= GSTN Already Exist


seyon.api.invoice.page-size=20
seyon.api.voucher.page-size=10
seyon.api.company.page-size=20

seyon.api.app-id=614ead84220211e9ab14d663bd873d93
seyon.api.sql-files=classpath*:sample-data/company.sql,classpath*:sample-data/user.sql
seyon.api.role-codes=COMPANY_USER,COMPANY_ADMIN,COMPANY_AUDITOR,VOUCHER_ADMIN